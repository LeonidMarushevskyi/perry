
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.1.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'


repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}


jar {
    manifest {
        attributes 'Main-Class': 'gov.ca.cwds.perry.PerryApp'
    }
}


dependencies {

	// PRODUCTION:
    // The production code usek the SLF4J logging API at compile time.
    compile 'org.slf4j:slf4j-api:1.7.21'
	compile group: 'org.springframework.boot',    name: 'spring-boot-starter-web'
	compile group: 'org.glassfish.jersey.core',   name: 'jersey-client', version: '2.23.2'
	compile group: 'com.fasterxml.jackson.jaxrs', name: 'jackson-jaxrs-json-provider', version: '2.8.3'
	compile group: 'org.glassfish.jersey.media',  name: 'jersey-media-jaxb', version: '2.23.2'
	compile group: 'org.glassfish.jersey.media',  name: 'jersey-media-json-jackson', version: '2.23.2'


	// TEST:
    // Declare the dependency for your favourite test framework you want to use in your tekts.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.

    testCompile 'junit:junit:4.12'
	testCompile group: 'org.springframework', name: 'spring-test'
	testCompile group: 'org.springframework', name: 'spring-test-mvc', version: '1.0.0.M2'

	testCompile group: 'org.mockito', name: 'mockito-core', version: '1.10.19'
	testCompile('org.springframework.boot:spring-boot-starter-test')

}
