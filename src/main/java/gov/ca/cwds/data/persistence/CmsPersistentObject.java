package gov.ca.cwds.data.persistence;

import java.io.Serializable;
import java.time.LocalDateTime;
import javax.persistence.Column;

public abstract class CmsPersistentObject {

  private static final long serialVersionUID = 3356146490011466495L;

  /** All legacy "identifier" fields and their foreign key are CHAR(10). */
  public static final int CMS_ID_LEN = 10;

  /**
   * LAST_UPDATE_TIMESTAMP - The date and time of the most recent update of an occurrence of this
   * entity type.
   */
  @Column(name = "LST_UPD_TS", nullable = false)
  private LocalDateTime lastUpdatedTime;

  /**
   * LAST_UPDATE_ID - The ID (a sequential 3 digit base 62 number generated by the system) of the
   * STAFF PERSON or batch program which made the last update to an occurrence of this entity type.
   */
  @Column(name = "LST_UPD_ID", nullable = false, length = 3)
  private String lastUpdatedId;

  public LocalDateTime getLastUpdateTime() {
    return lastUpdatedTime;
  }

  public void setLastUpdateTime(LocalDateTime lastUpdatedTime) {
    this.lastUpdatedTime = lastUpdatedTime;
  }

  public String getLastUpdateId() {
    return lastUpdatedId;
  }

  public void setLastUpdateId(String lastUpdatedId) {
    this.lastUpdatedId = lastUpdatedId;
  }

  /**
   * The key may be any serializable object, including String, Number (and its extensions), or
   * composite key types. By definition, a primary key is uniquely identifies a record and is
   * non-null. In contrast, other unique identifiers, such as unique indexes, are not necessarily
   * constrained the non-null mandate, depending on the platform.
   *
   * @return the unique primary key
   */
  public abstract Serializable getPrimaryKey();
}
