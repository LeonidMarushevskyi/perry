applicationName: Perry
version: ${APP_VERSION:-local}

saf:
  baseUrl: ${SAF_BASE_URL:-https://sectest.dss.ca.gov/web1/dss_saf}
  authPath: ${SAF_AUTH_PATH:-/auth/v2/oauth2/authorize}
  retrieveTokenPath: ${SAF_RETRIEVE_TOKEN_PATH:-/auth/v2/token}
  validateTokenPath: ${SAF_VALIDATE_TOKEN_PATH:-/data/v2/api/client/41/auth/validatetoken}
  clientId: ${SAF_CLIENT_ID:-XXXXXX}
  clientSecret: ${SAF_CLIENT_SECRET:-XXXXXX}
  callbackUrl: ${SAF_CALLBACK_URL:-http://localhost:8080/authn/callback}
  scope: ${SAF_SCOPE:-basic_profile}

jerseyClient:
  minThreads: 1
  maxThreads: 128
  workQueueSize: 8
  gzipEnabled: true
  gzipEnabledForRequests: true
  chunkedEncodingEnabled: true

swagger:
  templateName: swagger.mustache
  assetsPath: /static
  resourcePackage: gov.ca.cwds.rest.resources
  title: CWDS API
  description: RESTful API definitions for the CWS New System.
  logo: images/CWDS-API-Logo-Horizontal.png
 
 
nsDataSourceFactory:
  driverClass: org.postgresql.Driver
  user: ${DB_NS_USER}
  password: ${DB_NS_PASSWORD}
  url: ${DB_NS_JDBC_URL}
  validationQuery: "/* MyService Health Check */ SELECT 1"
  logValidationErrors: true
  initialSize: 2
  minSize: 2
  maxSize: 8
  minIdleTime: 1 minute
  properties:
      hibernate.dialect: org.hibernate.dialect.PostgreSQL82Dialect
      hibernate.id.new_generator_mappings: false
      hibernate.show_sql: true


cmsDataSourceFactory:
  driverClass: com.ibm.db2.jcc.DB2Driver
  user: ${DB_CMS_USER}
  password: ${DB_CMS_PASSWORD}
  url: ${DB_CMS_JDBC_URL}
  validationQuery: "/* MyService Health Check */ SELECT 1 FROM sysibm.sysdummy1 for read only"
  logValidationErrors: true
  initialSize: 2
  minSize: 2
  maxSize: 8
  minIdleTime: 1 minute
  properties:
      hibernate.dialect: org.hibernate.dialect.DB2Dialect
      hibernate.show_sql: true
      hibernate.default_schema: ${DB_CMS_SCHEMA}

server:
  applicationConnectors:
  - type: http 
    port: ${APP_STD_PORT:-8080}
  adminConnectors:
  - type: http
    port: ${APP_ADMIN_PORT:-8081}
    
  requestLog:
    appenders:
      - type: console

logging:
  level: ${LOGLEVEL:-DEBUG}
  loggers:
    "org.hibernate.SQL":
      level: ALL
    "org.hibernate.type.descriptor.sql":
      level: ALL
    "AUDIT":
      level: ALL
  appenders:
    - type: console
      threshold: ALL
      timeZone: UTC
      target: stdout
      logFormat: '%d %level %X{remoteAddress} [%thread] %logger{0}: userid:"%X{userid}" sessionid:"%X{sessionid}" uniqueId:="%X{uniqueId}" "%message%n"'  
